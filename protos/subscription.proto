syntax = "proto3";

package subs;

import "google/protobuf/timestamp.proto";
import "common.proto";
import "api.proto";

option go_package = "github.com/codeandcodes/subs/protos";

/*
* Basic flow is:
* 1) Select the payers (I am the payee)
* 2) Select the frequency
* 3) This creates the Subscription object on the backend
* 4) For each payer, I create a SubscriptionEventRequest
* 5) For each payer, they respond with a SubscriptionEventResponse
*/
message Subscription {
  string id = 1;

  subs.SubscriptionSetupRequest subscription_setup_request = 2;

  enum SubscriptionStatus {
    PENDING = 0;
    ACTIVE = 1;
    PAUSED = 2;
    CANCELED = 3;
    CONCLUDED = 4;
  }

  SubscriptionStatus status = 7;
}

/*
* SubscriptionRequest and SubscriptionResponse are 1:1 with subscription and user
*/
message SubscriptionEventRequest {
  string id = 1;
  string subscription_id = 2;
  subs.User payer = 3;
  subs.User payee = 4;
  google.protobuf.Timestamp create_time = 5;
  google.protobuf.Timestamp update_time = 6;
}

message SubscriptionEventResponse {
  string id = 1;
  string subscription_id = 2;
  subs.User payer = 3;
  subs.User payee = 4;
  
  enum SubscriptionEventResponseType {
    ACCEPT = 0;
    REJECT = 1;
  }
  SubscriptionEventResponseType response = 5;

  string description = 6;
  google.protobuf.Timestamp create_time = 7;
  google.protobuf.Timestamp update_time = 8;
}